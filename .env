PORT = 4000
MONGODB_DEV_URL = "mongodb+srv://amISunil25:TPX0rG3fkzbqxW2A@cluster0.fxk2nys.mongodb.net/Portfoilo?retryWrites=true&w=majority"
#"mongodb://localhost:27017/Portfolio"
EMAIL_PUBLIC_KEY ="FKb5666526ziIuRAu"
EMAIL_SERVICE_ID ="service_suqy9cx"
EMAIL_TEMPLATE_ID ="template_inmxhzu"

//router
# const express = require("express");
# const {
#   getAllBlogs,
#   createBlog,
#   getBlogById,
#   updateBlog,
#   deleteBlog,
# } = require("../controllers/.index");
 
# const router = express.Router();
 
# router.route("/").post()

# router.route("/").get(getAllBlogs).post(createBlog);
# router.route("/:id").get(getBlogById).put(updateBlog).delete(deleteBlog);
 
# module.exports = router;

// controller
# const blogService = require("../services/BlogService");
#  const blogService = require('../services/index')
# exports.getAllBlogs = async (req, res) => {
#   try {
#     const blogs = await blogService.getAllBlogs();
#     res.json({ data: blogs, status: "success" });
#   } catch (err) {
#     res.status(500).json({ error: err.message });
#   }
# };
 
# exports.createBlog = async (req, res) => {
#   try {
#     const blog = await blogService.createBlog(req.body);
#     res.json({ data: blog, status: "success" });
#   } catch (err) {
#     res.status(500).json({ error: err.message });
#   }
# };
 
# exports.getBlogById = async (req, res) => {
#   try {
#     const blog = await blogService.getBlogById(req.params.id);
#     res.json({ data: blog, status: "success" });
#   } catch (err) {
#     res.status(500).json({ error: err.message });
#   }
# };
 
# exports.updateBlog = async (req, res) => {
#   try {
#     const blog = await blogService.updateBlog(req.params.id, req.body);
#     res.json({ data: blog, status: "success" });
#   } catch (err) {
#     res.status(500).json({ error: err.message });
#   }
# };
 
# exports.deleteBlog = async (req, res) => {
#   try {
#     const blog = await blogService.deleteBlog(req.params.id);
#     res.json({ data: blog, status: "success" });
#   } catch (err) {
#     res.status(500).json({ error: err.message });
#   }
# };


 // services
# const BlogModel = require("../models/Blog");
#  exports.getAllBlogs = async () => {
#  return await BlogModel.find();
# };
 
#  exports.createBlog = async (blog) => {
#    return await BlogModel.create(blog);
# };
#  exports.getBlogById = async (id) => {
#   return await BlogModel.findById(id);
#  };
 
#  exports.updateBlog = async (id, blog) => {
#   return await BlogModel.findByIdAndUpdate(id, blog);
#  };
 
#  exports.deleteBlog = async (id) => {
#   return await BlogModel.findByIdAndDelete(id);
#  };

//model schema
# const mongoose = require("mongoose")
# const Schema = mongoose.Schema

# const blogSchema =  new Schema({

# 	title:String,
# 	body:String,
# 	image:String,
# 	created_at:{
# 		type:Date,
# 		default:Date.now
# 	}
# })

# module.exports = mongoose.model("Blog", blogSchema);